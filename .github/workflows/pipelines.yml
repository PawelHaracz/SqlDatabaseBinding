name: "Build and push to nuget"
on:
  push:
    branches:
      - "master"
    tags-ignore:
      - "*"
    paths-ignore:
      - "README.md"
      - ".github/*"
  pull_request:
    branches:
      - "feature/*"
  workflow_dispatch:

jobs:
  build-package:
    runs-on: "windows-2019"
    env:
      BuildConfiguration: "Release"
      ProjectsPath: "**/*.MSSqlDatabase.csproj"
    outputs:
      gitVersion: ${{ steps.gitversion.outputs.nuGetVersion }} 
    name: Build application
    steps:
      - uses: actions/checkout@v2

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: SqlDatabaseBinding/GitVersion.yml

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Build
        run: dotnet build -c $(BuildConfiguration) -p:Version=${{ steps.gitversion.outputs.nuGetVersion }}

      - name: Pack
        run: dotnet pack -p:Version=${{steps.gitversion.outputs.nuGetVersion}} --no-build -o nuget/
      - name: uplad artifacts   
        uses: 'actions/upload-artifact@v2'
        with:
            name: nupkg
            path: ../nuget/*.nupkg
  publish-package:
    runs-on: "windows-2019"
    name: publish nuget
    needs: build-package
    env:
      NUGET_FEED: https://api.nuget.org/v3/index.json
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
    if: ${{ success() }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: nupkg
      - name: Push to NuGet Feed
        run: dotnet nuget push ./nupkg/*.nupkg --source $(NUGET_FEED) --skip-duplicate --api-key $(NUGET_KEY)
      
      - task: NuGetCommand@2
        displayName: "Nuget push"
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          command: "push"
          packagesToPush: "$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg"
          nuGetFeedType: "external"
          publishFeedCredentials: "Nuget.org"
      - task: GitHubTag@1
        displayName: "Git Hub tag"
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          githubEndpoint: "PawelHaracz"
          repositoryName: "$(Build.Repository.Name)"
          tag: "v${{ needs.build.outputs.gitVersion }}